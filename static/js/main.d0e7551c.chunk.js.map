{"version":3,"sources":["actions/burgerActions.js","BurgerContainer.js","actions/pizzaActions.js","PizzaContainer.js","reducers/burgerReducer.js","reducers/pizzaReducer.js","reducers/rootReducer.js","App.js","index.js"],"names":["BUY_BURGER","ADD_BURGER","BurgerContainer","useState","numBuy","setNumBuy","numAdd","setNumAdd","numBurgers","useSelector","state","burger","numOfBurgers","dispatch","useDispatch","handleBuyClick","type","payload","buyBurger","parseInt","handleAddClick","addBurger","style","margin","placeholder","value","onChange","e","target","onClick","BUY_PIZZA","ADD_PIZZA","PizzaContainer","numPizzas","pizza","numOfPizzas","buyPizza","addPizza","initialState","burgerReducer","action","pizzaReducer","rootReducer","combineReducers","store","createStore","App","className","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d0e7551c.chunk.js","sourcesContent":["export const BUY_BURGER = 'BUY_BURGER'\r\nexport const ADD_BURGER = 'ADD_BURGER'\r\n\r\nexport  function buyBurger(number=1)\r\n{\r\n  return{\r\n    type:BUY_BURGER,\r\n    payload:number\r\n  }\r\n}\r\nexport  function addBurger(number=1)\r\n{\r\n  return{\r\n    type:ADD_BURGER,\r\n    payload:number\r\n  }\r\n}\r\n\r\n","import React, {useState} from 'react'\r\nimport { useDispatch,useSelector } from 'react-redux'\r\nimport { buyBurger,addBurger } from './actions/burgerActions'\r\n\r\nconst BurgerContainer=()=> {\r\n  \r\n  const [numBuy,setNumBuy] = useState('')\r\n  const [numAdd,setNumAdd] = useState('')  \r\n  \r\n  const numBurgers = useSelector(state => state.burger.numOfBurgers)\r\n  const dispatch = useDispatch()\r\n  \r\nconst handleBuyClick =()=>{\r\n  dispatch(buyBurger(parseInt(numBuy)));\r\n  setNumBuy('')\r\n }\r\n const handleAddClick =()=>{\r\n  dispatch(addBurger(parseInt(numAdd)));\r\n  setNumAdd('')\r\n }\r\n\r\n  return (\r\n    <div style={{margin: \"20px 50px\"}}>\r\n      { <h2>Number of Burgers - {numBurgers} </h2> }\r\n      <input type=\"text\" placeholder=\"Enter the number of Burgers bought\" value={numBuy} onChange={(e)=>setNumBuy(e.target.value)}/>\r\n      <button onClick={()=>handleBuyClick()}>Buy Burger</button> <br/>\r\n      <input type=\"text\" placeholder=\"Enter the number of Burgers added\" value={numAdd} onChange={(e)=>setNumAdd(e.target.value)}/>\r\n    \r\n      <button onClick={()=>handleAddClick()}>Add Burger</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BurgerContainer\r\n\r\n\r\n","export const BUY_PIZZA = 'BUY_PIZZA'\r\nexport const ADD_PIZZA = 'ADD_PIZZA'\r\n\r\nexport  function buyPizza(number=1)\r\n{\r\n  return{\r\n    type:BUY_PIZZA,\r\n    payload:number\r\n  }\r\n}\r\nexport  function addPizza(number=1)\r\n{\r\n  return{\r\n    type:ADD_PIZZA,\r\n    payload:number\r\n  }\r\n}\r\n\r\n","import React, {useState} from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n import { buyPizza,addPizza } from './actions/pizzaActions'\r\n\r\n \r\nconst PizzaContainer=()=> {\r\n  const [numBuy,setNumBuy] = useState('')\r\n  const [numAdd,setNumAdd] = useState('')\r\n\r\n  const numPizzas = useSelector(state => state.pizza.numOfPizzas)\r\n  const dispatch = useDispatch()\r\n  \r\n  \r\n  const handleBuyClick =()=>{\r\n    dispatch(buyPizza(parseInt(numBuy)));\r\n    setNumBuy('')\r\n  }\r\n  const handleAddClick =()=>{\r\n    dispatch(addPizza(parseInt(numAdd)));\r\n    setNumAdd('')\r\n  }\r\n\r\n  return (\r\n    <div style={{margin: \"20px 50px\"}}>\r\n    <h2>Number of Pizzas - {numPizzas} </h2>\r\n    <input type=\"text\" placeholder=\"Enter the number of Pizzas bought\" value={numBuy} onChange={(e)=>setNumBuy(e.target.value)}/>\r\n    <button onClick={()=>handleBuyClick()}>Buy Pizza</button> <br/>\r\n    <input type=\"text\" placeholder=\"Enter the number of Pizzas added\" value={numAdd} onChange={(e)=>setNumAdd(e.target.value)}/>\r\n    <button onClick={()=>handleAddClick()}>Add Pizza</button>\r\n   \r\n    \r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default PizzaContainer","import {BUY_BURGER,ADD_BURGER} from '../actions/burgerActions'\r\n// Define an initial state value for the app\r\nconst initialState = {\r\n    numOfBurgers: 10\r\n  }\r\n// Create a \"reducer\" function that determines what the new state\r\n// should be when something happens in the app\r\nfunction burgerReducer(state = initialState, action) {\r\n  // Reducers usually look at the type of action that happened\r\n  // to decide how to update the state\r\n  switch (action.type) {\r\n    case BUY_BURGER:\r\n      return { ...state, numOfBurgers: state.numOfBurgers - action.payload }\r\n    case ADD_BURGER:\r\n      return { ...state, numOfBurgers: state.numOfBurgers + action.payload }\r\n    default:\r\n      // If the reducer doesn't care about this action type,\r\n      // return the existing state unchanged\r\n      return state\r\n  }\r\n}\r\n  export default burgerReducer;","import {BUY_PIZZA,ADD_PIZZA} from '../actions/pizzaActions'\r\n// Define an initial state value for the app\r\nconst initialState = {\r\n    numOfPizzas: 10\r\n  }\r\n// Create a \"reducer\" function that determines what the new state\r\n// should be when something happens in the app\r\nfunction pizzaReducer(state = initialState, action) {\r\n  // Reducers usually look at the type of action that happened\r\n  // to decide how to update the state\r\n  switch (action.type) {\r\n    case BUY_PIZZA:\r\n      return { ...state, numOfPizzas: state.numOfPizzas - action.payload }\r\n    case ADD_PIZZA:\r\n      return { ...state, numOfPizzas: state.numOfPizzas + action.payload }\r\n    default:\r\n      // If the reducer doesn't care about this action type,\r\n      // return the existing state unchanged\r\n      return state\r\n  }\r\n}\r\n  export default pizzaReducer;","import { combineReducers } from 'redux'\r\nimport burgerReducer from './burgerReducer'\r\nimport pizzaReducer from './pizzaReducer'\r\n\r\nconst rootReducer = combineReducers({\r\n  burger: burgerReducer,\r\n  pizza: pizzaReducer\r\n  \r\n})\r\n\r\nexport default rootReducer\r\n\r\n","import React from 'react'\nimport{createStore} from 'redux'\nimport { Provider } from 'react-redux'\nimport BurgerContainer from './BurgerContainer'\nimport PizzaContainer from './PizzaContainer'\nimport rootReducer from './reducers/rootReducer'\nconst store = createStore(rootReducer)\n\nfunction App () {\n  return (\n    <Provider store={store}>\n      <div className='App'>\n        \n        <BurgerContainer />\n        <PizzaContainer />        \n      </div>\n    </Provider>\n  )\n}\n\nexport default App\n// import React from \"react\";\n// import { Provider } from \"react-redux\";\n// import { createStore } from \"redux\";\n// import todos from \"./reducers\";\n// import Todo from \"./TODO\";\n// const store = createStore(todos);\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <Provider store={store}>\n//         <Todo />\n//       </Provider>\n//     </div>\n//   );\n// }\n//App.js file\n// import React, {Component} from 'react';\n// import {Switch, Route, Link} from 'react-router-dom';\n// import Login, {fakeAuth} from \"./Login\";\n// import {PrivateRoute} from \"./PrivateRoute\";\n\n// class App extends Component {\n//   render() {\n//     return (\n//         <div className=\"App\">\n//           <Header/>\n//           <Switch>\n//             <Route exact path=\"/\" component={Home}/>\n//             <Route path=\"/items\" component={Items}/>\n//             <Route path=\"/category\" component={Category}/>\n//             <Route path=\"/login\" component={Login}/>\n//             <PrivateRoute path=\"/admin\" component={Admin} isAuthenticated={fakeAuth.isAuthenticated}/>\n//           </Switch>\n//         </div>\n//     );\n//   }\n// }\n\n// export const Header = () => (\n//     <header className=\"App-header\">\n//       <h1 className=\"App-title\">React Routing Example</h1>\n//       <ul>\n//         <li>\n//           <Link to=\"/\">Home</Link>\n//         </li>\n//         <li>\n//           <Link to=\"/items\">Items</Link>\n//         </li>\n//         <li>\n//           <Link to=\"/category\">Category</Link>\n//         </li>\n//         <li>\n//           <Link to=\"/admin\">Admin</Link>\n//         </li>\n//       </ul>\n//     </header>\n// );\n\n// export const Home = () => (\n//     <div>\n//       <h1> Home Component</h1>\n//       <div>\n//         Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's\n//         standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make\n//         a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting,\n//         remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing\n//         Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions\n//         of Lorem Ipsum.\n//       </div>\n//     </div>\n// );\n\n// export const Items = () => (\n//     <div>\n//       <h1>Items Component</h1>\n//       <ul>\n//         <li>Item 1</li>\n//         <li>Item 2</li>\n//         <li>Item 3</li>\n//         <li>Item 4</li>\n//       </ul>\n//     </div>\n// );\n\n// export const Category = ({match}) => (\n//     <div>\n//       <h1>Category Component</h1>\n//       <h5>Click on a category</h5>\n//       <ul>\n//         <li>\n//           <Link to={`${match.url}/shoes`}>Shoes</Link>\n//         </li>\n//         <li>\n//           <Link to={`${match.url}/food`}>Food</Link>\n//         </li>\n//         <li>\n//           <Link to={`${match.url}/dresses`}>Dresses</Link>\n//         </li>\n//       </ul>\n\n//       <Route\n//           path={`${match.path}/:categoryName`}\n//           render={props => (<div>{props.match.params.categoryName} category</div>)}\n//       />\n//     </div>\n// );\n\n// export const Admin = () => (\n//     <div>\n//       <h1>Protected Admin Component</h1>\n//       <p>\n//         You now access to this component because you are logged in.\n//       </p>\n//     </div>\n// );\n\n //export default App;\n ","// // //index.js\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n// import './index.css';\n// import TodoListHooks from './TodoListHooks';\n// ReactDOM.render(\n//       <TodoListHooks/>,\n//     document.getElementById('root'))\n\n\n// class ErrorBoundary extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = { error: null, errorInfo: null };\n//   }\n  \n//   componentDidCatch(error, errorInfo) {\n//     // Catch errors in any components below and re-render with error message\n//     this.setState({\n//       error: error,\n//       errorInfo: errorInfo\n//     })\n//     // You can also log error messages to an error reporting service here\n//   }\n  \n//   render() {\n//     if (this.state.errorInfo) {\n//       // Error path\n//       return (\n//         <div>\n//           <h2>Something went wrong.</h2>\n//           <details style={{ whiteSpace: 'pre-wrap' }}>\n//             {this.state.error && this.state.error.toString()}\n//             <br />\n//             {this.state.errorInfo.componentStack}\n//           </details>\n//         </div>\n//       );\n//     }\n//     // Normally, just render children\n//     return this.props.children;\n//   }  \n// }\n\n// class BuggyCounter extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = { counter: 0 };\n//     this.handleClick = this.handleClick.bind(this);\n//   }\n  \n//   handleClick() {\n//     this.setState(({counter}) => ({\n//       counter: counter + 1\n//     }));\n//   }\n  \n//   render() {\n//     if (this.state.counter === 5) {\n//       // Simulate a JS error\n//       throw new Error('I crashed!');\n//     }\n//     return <h1 onClick={this.handleClick}>{this.state.counter}</h1>;\n//   }\n// }\n\n// function App1() {\n//   return (\n//     <div>\n//       <p>\n//         <b>\n//           This is an example of error boundaries in React 16.\n//           <br /><br />\n//           Click on the numbers to increase the counters.\n//           <br />\n//           The counter is programmed to throw when it reaches 5. This simulates a JavaScript error in a component.\n//         </b>\n//       </p>\n//       <hr />\n//       <ErrorBoundary>\n//         <p>These two counters are inside the same error boundary. If one crashes, the error boundary will replace both of them.</p>\n//         <BuggyCounter />\n//         <BuggyCounter />\n//       </ErrorBoundary>\n//       <hr />\n//       <p>These two counters are each inside of their own error boundary. So if one crashes, the other is not affected.</p>\n//       <ErrorBoundary><BuggyCounter /></ErrorBoundary>\n//       <ErrorBoundary><BuggyCounter /></ErrorBoundary>\n//     </div>\n//   );\n// }\n\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}